-----------------------------------------------------------------------------
#Item list; id-0,name-1,itemClass-2,type-3,quantity-4,price-5,availableClass-6,requiredLevel-7,addedATK-8,addedDEF-9
10
1;Excalibur;Weapon(1H);Sword;299;3;Knight;2;15;0
2;GreatSword;Weapon(2H);Sword(2H);299;3;Knight;2;12;0
3;Normal Bow;Weapon(2H);Bow(2H);297;4;Archer;1;14;0
4;Red Sword;Weapon(1H);Sword;498;5;Barbarian;3;3;0
5;Great Axe;Weapon(2H);Axe(2H);398;10;Barbarian;10;5;0
6;Shield;OffHand;Shield;398;10;Knight;10;0;10
7;Leather ChestPlate;Armor;ChestPiece;298;6;Knight;3;0;12
8;Coif;Armor;HeadGear;298;6;Knight;2;0;3
9;Leather Leggings;Armor;Leggings;298;6;Knight;1;0;4
10;Leather Boots;Armor;Boots;298;6;Knight;6;0;5


itemClass = Armor,Weapon(1H),Weapon(2H),OffHand

type = HeadGear,ChestPiece,Leggings,Boots,Sword/GreatSword(2H)/Bow(2)/Axe(2H),Shield(OffHand)
-----------------------------------------------------------------------------
#Database:

- saves ->playerstats,progress,
- player stats -> inventory
- enemy stats? ->names of enemies
- progress
- shop list? ->items

-----------------------------------------------------------------------------
#To do to present:
-add buy potion feature
-make the potion give a percentage of the max hp as health
-fix dmg taken by player in gamemanager.EnemyTurn

#To do list long run:
3.add kill counter
4.save file -> saving player data (instantiate the player entity from GameManager in createPlayer class with the details from save file)
5.make a database
6.add new mobs:orcs, orc king
7.balance stats (xp drop, gold drop,class stats)

post release: 
-add new mobs: goblin king, orcs, orc king,skeleton,skeleton king

-----------------------------------------------------------------------------
#Notes

~Cand introduc clasele:
- pentru jucator> formula costuri (stat - stat de clasa) / modifier +1 ;
- in stats sa fie max stats ptr fiecare clasa


#Dummy code 
In btn start click event: 
gameManager.LoadInventoryList(); (after create enemy)
In gamemanager:
        //Load and Save Inventory
        public void LoadInventoryList()
        {
            StreamReader In = new StreamReader(@"..\..\Resources\Inventory.txt");
            int numberItems = Convert.ToInt32(In.ReadLine());
            if(numberItems > 0)
            for (int i = 0; i < numberItems; i++)
            {
                string line = In.ReadLine();
                string[] arr1 = line.Split(';');
                Item item = new Item(arr1[1], arr1[2], arr1[3], Convert.ToInt32(arr1[4]), Convert.ToInt32(arr1[5]), arr1[6], Convert.ToInt32(arr1[7]), Convert.ToInt32(arr1[8]), Convert.ToInt32(arr1[9]));
                FightingScene.date.GameManager.Player.InventoryList.Add(Convert.ToInt32(arr1[0]), item);
            }
            In.Close();
        }
        public void SaveInventoryList()
        {
            StreamWriter Out = new StreamWriter(@"..\..\Resources\Inventory.txt");
            Out.WriteLine(FightingScene.date.GameManager.Player.InventoryList.Count);
            foreach (var item in FightingScene.date.GameManager.Player.InventoryList)
            {
                //id,name,type,quantity,price,availableClass,requirementStat,requirement,addedMXH,addedATK,addedSTR,addedDEX,addedSPD,addedDEF
                Out.WriteLine($"{item.Key};{item.Value.Name};{item.Value.ItemClass};{item.Value.ItemType};{item.Value.Quantity};{item.Value.Price};{item.Value.AvailableClass};{item.Value.AddedATK};{item.Value.AddedDEF}");
            }

            Out.Close();
        }
